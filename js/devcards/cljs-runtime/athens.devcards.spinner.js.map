{"version":3,"sources":["athens/devcards/spinner.cljs"],"mappings":"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","names":["stylefy.core.keyframes.cljs$core$IFn$_invoke$arity$variadic","athens.devcards.spinner/spinner-style","athens.devcards.spinner/spinner-progress-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.devcards.spinner/spinner-message-style","athens.style/OPACITIES","athens.devcards.spinner/initial-spinner-container","p__60872","map__60873","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.devcards.spinner/spinner-component","message","style","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","or__4185__auto__","js/goog.define","athens.devcards.spinner/COMMIT_URL","athens.devcards.spinner/initial-spinner-component","devcards.core/register-card","devcards.core/card-base","js/athens","js/athens.devcards","js/athens.devcards.spinner","js/athens.devcards.spinner.t_athens$devcards$spinner60875","athens.devcards.spinner/t_athens$devcards$spinner60875","_60877","meta60876","this__38815__auto__","devcard-opts__38816__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__38834__auto__","cljs.core/fn?","data-atom__38835__auto__","owner__38836__auto__","reagent.core/as-element","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.spinner/->t_athens$devcards$spinner60875","js/athens.devcards.spinner.t_athens$devcards$spinner60885","athens.devcards.spinner/t_athens$devcards$spinner60885","_60887","meta60886","athens.devcards.spinner/->t_athens$devcards$spinner60885","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns athens.devcards.spinner\n  (:require\n    [athens.db]\n    [athens.style :refer [color OPACITIES]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer-macros [defcard-rg]]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n(stylefy/keyframes \"appear-and-drop\"\n                   [:from\n                    {:transform \"translateY(-40%)\"\n                     :opacity \"0\"}]\n                   [:to\n                    {:transform \"translateY(0)\"\n                     :opacity \"var(--anim-opacity-end, 1)\"}])\n\n\n(stylefy/keyframes \"appear\"\n                   [:from\n                    {:opacity \"0\"}]\n                   [:to\n                    {:opacity \"var(--anim-opacity-end, 1)\"}])\n\n\n(stylefy/keyframes \"spinning\"\n                   [:from\n                    {:transform \"rotate(0deg)\"}]\n                   [:to\n                    {:transform \"rotate(1079deg)\"}])\n\n\n(def spinner-style\n  {:--anim-opacity-end \"1\"\n   :width \"10em\"\n   :height \"10em\"\n   :display \"grid\"\n   :align-self \"center\"\n   :margin \"auto\"\n   :text-align \"center\"\n   :place-items \"center\"\n   :animation \"appear 0.5s ease\"\n   :place-content \"center\"\n   :grid-gap \"0.5rem\"})\n\n\n(def spinner-progress-style\n  {:width \"3em\"\n   :height \"3em\"\n   :border-radius \"1000px\"\n   :border (str \"1.5px solid \" (color :panel-color))\n   :border-top-color (color :link-color)\n   :animation \"spinning 3s linear infinite\"})\n\n\n(def spinner-message-style\n  {:--anim-opacity-end (:opacity-high OPACITIES)\n   :animation \"appear-and-drop 1s 0.75s ease\"\n   :font-size \"14px\"\n   :animation-fill-mode \"both\"})\n\n\n(def initial-spinner-container\n  {:margin-top      \"50vh\"\n   :transform       \"translateY(-50%)\"\n   :display         \"flex\"\n   :flex-direction  \"column\"\n   :justify-content \"center\"\n   :align-items     \"center\"})\n\n\n;;; Components\n\n\n(defn spinner-component\n  [{:keys [message style]}]\n  [:div (use-style (merge spinner-style style))\n   [:div (use-style spinner-progress-style)]\n   [:span (use-style spinner-message-style) (or message \"Loading...\")]])\n\n\n(goog-define COMMIT_URL false)\n\n\n(defn ^:export initial-spinner-component\n  []\n  [:div (use-style initial-spinner-container)\n   (when COMMIT_URL\n     [:a {:href COMMIT_URL} COMMIT_URL])\n   [spinner-component]])\n\n\n;;; Devcards\n\n\n(defcard-rg Default-Spinner\n  [spinner-component (use-style spinner-style)])\n\n\n(defcard-rg Spinner-with-custom-message\n  [spinner-component (use-style spinner-style {:message \"Custom Loading Message\"})])\n\n"]}