{"version":3,"sources":["athens/devcards/block_page.cljs"],"mappings":"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","names":["athens.devcards.block-page/datoms","posh.reagent/transact!","athens.db/dsdb","p__65649","map__65650","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.devcards.block-page/block-page-el","string","children","uid","parents","editing-uid","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","iter__4582__auto__","s__65653","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__65655","cljs.core/chunk-buffer","i__65654","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__65652","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","p","map__65656","map__65658","title","athens.router/navigate-uid","or__4185__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","komponentit.autosize/textarea","e","G__65660","G__65661","s__65663","b__65665","i__65664","iter__65662","child","map__65667","map__65669","id","athens.devcards.blocks/block-el","athens.devcards.block-page/block-page-component","ident","cljs.core/deref","block","posh.reagent/pull","athens.db/block-pull-pattern","athens.db/parents-pull-pattern","athens.db/shape-parent-query","G__65671","re-frame.core/subscribe","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.block-page\n  (:require\n    [athens.db :as db]\n    [athens.devcards.blocks :refer [block-el]]\n    [athens.router :refer [navigate-uid]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer-macros [defcard-rg]]\n    [komponentit.autosize :as autosize]\n    [posh.reagent :refer [transact! pull]]\n    [re-frame.core :refer [subscribe]]))\n\n\n;;; Globals\n\n\n(def datoms\n  [{:db/id          2381,\n    :block/uid      \"OaSVyM_nr\",\n    :block/open     true,\n    :node/title     \"Athens FAQ\",\n    :block/children [{:db/id          2158,\n                      :block/uid      \"BjIm6GeRP\",\n                      :block/string   \"Why open-source?\",\n                      :block/open     true,\n                      :block/order    3,\n                      :block/children [{:db/id        2163,\n                                        :block/uid    \"GNaf3XzpE\",\n                                        :block/string \"The short answer is the security and privacy of your data.\",\n                                        :block/open   true,\n                                        :block/order  1}\n                                       {:db/id          2347,\n                                        :block/uid      \"jbiKpcmIX\",\n                                        :block/string   \"Firstly, I wouldn't be surprised if Roam was eventually open-sourced.\",\n                                        :block/open     true,\n                                        :block/order    0,\n                                        :block/children [{:db/id        2176,\n                                                          :block/uid    \"gVINXaN8Y\",\n                                                          :block/string \"Suffice it to say that Roam being open-source is undeniably something that the team has already considered. Why is it not open-source already? You'd have to ask the Roam team, but Roam, a business, is not obligated to open-source anything.\",\n                                                          :block/open   true,\n                                                          :block/order  2}\n                                                         {:db/id          2346,\n                                                          :block/uid      \"ZOxwo0K_7\",\n                                                          :block/string   \"The conclusion of the [[Roam White Paper]] states that Roam's vision is a collective, \\\"open-source\\\" intelligence.\",\n                                                          :block/open     true,\n                                                          :block/order    0,\n                                                          :block/children [{:db/id        2174,\n                                                                            :block/uid    \"WKWPPSYQa\",\n                                                                            :block/string \"((iWmBJaChO))\",\n                                                                            :block/open   true,\n                                                                            :block/order  0}]}\n                                                         {:db/id        2349,\n                                                          :block/uid    \"VQ-ybRmNh\",\n                                                          :block/string \"In the Roam Slack, I recall Conor saying one eventual goal is to work on a protocol that affords interoperability between open source alternatives. I would share the message but can't find it because of Slack's 10k message limit.\",\n                                                          :block/open   true,\n                                                          :block/order  1}\n                                                         {:db/id        2351,\n                                                          :block/uid    \"PGGS8MFH_\",\n                                                          :block/string \"Ultimately, we don't know when/if Roam will be open-sourced, but it's possible that Athens could accelerate or catalyze this. Regardless, there will always be some who are open-source maximalists and some who want to self-host, because that's probably really the most secure thing you can do (if you know what you're doing).\",\n                                                          :block/open   true,\n                                                          :block/order  3}]}]}]}])\n\n\n(transact! db/dsdb datoms)\n\n\n;;; Components\n\n\n;; TODO: replace \" > \" with an icon. Get a TypeError when doing this, though. Maybe same problem as \"->\" issue in Athena results\n(defn block-page-el\n  [{:block/keys [string children uid]} parents editing-uid]\n\n  [:div\n   ;; Parent Context\n   [:span {:style {:color \"gray\"}}\n    (interpose\n      \" > \"\n      (for [p parents]\n        (let [{:keys [node/title block/uid block/string]} p]\n          [:span {:key uid :style {:cursor \"pointer\"} :on-click #(navigate-uid uid)} (or string title)])))]\n\n   ;; Header\n   [:div {:data-uid uid :class \"block-header\"}\n    (if (= uid editing-uid)\n      [:h1\n       [autosize/textarea\n        {:value       string\n         :style       {:width \"100%\"}\n         :auto-focus  true\n         :on-change   (fn [e]\n                        ;;(prn (.. e -target -value))\n                        (transact! db/dsdb [[:db/add [:block/uid uid] :block/string (.. e -target -value)]]))}]]\n      [:h1 (str \"\u2022 \" string)])]\n\n   ;; Children\n   [:div (for [child children]\n           (let [{:keys [db/id]} child]\n             ^{:key id} [block-el child]))]])\n\n\n(defn block-page-component\n  [ident]\n  (let [block   @(pull db/dsdb db/block-pull-pattern ident)\n        parents (->> @(pull db/dsdb db/parents-pull-pattern ident)\n                     (db/shape-parent-query))\n        editing-uid @(subscribe [:editing-uid])]\n    ;;(prn block parents)\n    [block-page-el block parents editing-uid]))\n\n\n;;; Devcards\n\n\n(defcard-rg Block-Page\n  \"pull entity 2347: a block within Athens FAQ\"\n  [block-page-component 2347])\n"]}