{"version":3,"sources":["athens/effects.cljs"],"mappings":"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","names":["G__52177","G__52178","re-frame.core/reg-fx","datoms","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1","posh.reagent/transact!","athens.db/dsdb","cljs.core/println","G__52179","G__52180","new-db","datascript.core.reset_conn_BANG_.cljs$core$IFn$_invoke$arity$2","G__52181","G__52182","_","js/localStorage.setItem","cljs.core/deref","datascript.transit/write-transit-str","G__52183","G__52184","p__52185","map__52186","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","url","method","opts","on-success","on-failure","c__38856__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__38857__auto__","switch__38788__auto__","state_52230","state_val_52231","inst_52197","inst_52199","inst_52200","cljs.core/not","statearr-52232","statearr-52233","statearr-52234","G__52235","cljs.core/Keyword","statearr-52236","statearr-52237","statearr-52238","statearr-52239","js/Error","statearr-52240","statearr-52241","inst_52210","statearr-52242","statearr-52243","inst_52220","inst_52222","inst_52223","statearr-52244","statearr-52245","statearr-52246","inst_52194","inst_52195","cljs.core.async.impl.ioc-helpers/take!","inst_52228","cljs.core.async.impl.ioc-helpers/return-chan","statearr-52247","statearr-52250","statearr-52251","inst_52215","statearr-52252","inst_52218","inst_52219","statearr-52253","statearr-52256","statearr-52257","inst_52213","statearr-52258","statearr-52259","inst_52225","inst_52226","statearr-52261","inst_52202","inst_52203","inst_52204","inst_52205","inst_52206","statearr-52262","statearr-52263","statearr-52264","state-machine__38789__auto__","ret-value__38790__auto__","result__38791__auto__","cljs.core/keyword-identical?","e52265","js/Object","ex__38792__auto__","statearr-52266","cljs.core.async.impl.ioc-helpers/process-exception","state__38858__auto__","statearr-52267","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs-http.client/post","cljs-http.client/get","cljs-http.client/put","cljs-http.client/delete","re-frame.core/dispatch","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","G__52268","G__52269","timers","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p__52270","map__52271","action","id","event","wait","G__52273","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","js/setTimeout","js/clearTimeout","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc"],"sourcesContent":["(ns athens.effects\n  (:require\n    [athens.db :as db]\n    [cljs-http.client :as http]\n    [cljs.core.async :refer [go <!]]\n    [cljs.pprint :refer [pprint]]\n    [datascript.core :as d]\n    [datascript.transit :as dt]\n    [day8.re-frame.async-flow-fx]\n    [posh.reagent :refer [transact!]]\n    [re-frame.core :refer [dispatch reg-fx]]))\n\n\n;;; Effects\n\n\n(reg-fx\n  :transact\n  (fn [datoms]\n    (prn \"INPUTS\")\n    (pprint datoms)\n    (prn \"OUTPUTS\")\n    (pprint (:tx-data (transact! db/dsdb datoms)))\n    (println)))\n\n\n(reg-fx\n  :reset-conn\n  (fn [new-db]\n    (d/reset-conn! db/dsdb new-db)))\n\n\n(reg-fx\n  :set-local-storage-db\n  (fn [_]\n    (js/localStorage.setItem \"datascript/DB\" (dt/write-transit-str @db/dsdb))))\n\n\n(reg-fx\n  :http\n  (fn [{:keys [url method opts on-success on-failure]}]\n    (go\n      (let [http-fn (case method\n                      :post http/post :get http/get\n                      :put http/put :delete http/delete)\n            res     (<! (http-fn url opts))\n            {:keys [success body] :as all} res]\n        (if success\n          (dispatch (conj on-success body))\n          (dispatch (conj on-failure all)))))))\n\n\n(reg-fx\n  :timeout\n  (let [timers (atom {})]\n    (fn [{:keys [action id event wait]}]\n      (case action\n        :start (swap! timers assoc id (js/setTimeout #(dispatch event) wait))\n        :clear (do (js/clearTimeout (get @timers id))\n                   (swap! timers dissoc id))))))\n\n"]}